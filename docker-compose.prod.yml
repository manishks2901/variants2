# Production Docker Compose Configuration
# Use: docker-compose -f docker-compose.prod.yml up -d

version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: video-api-mongodb-prod
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: video_variants
    volumes:
      - mongodb_data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - ./backups:/backups
    networks:
      - video-api-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Redis for Celery
  redis:
    image: redis:7-alpine
    container_name: video-api-redis-prod
    restart: always
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - video-api-network
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # FastAPI Application
  api:
    build: 
      context: .
      target: base
    container_name: video-api-app-prod
    restart: always
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - mongodb
    environment:
      - MONGODB_URL=mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD}@mongodb:27017/video_variants?authSource=admin
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
      - CELERY_RESULT_BACKEND=redis://:${REDIS_PASSWORD}@redis:6379/0
      - TEMP_DIR=/tmp/video-variants
      - RESULTS_DIR=/app/results
      - ENVIRONMENT=production
    env_file:
      - .env.prod
    volumes:
      - ./temp:/tmp/video-variants
      - ./results:/app/results
      - ./logs:/app/logs
      - ./backups:/app/backups
    networks:
      - video-api-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  # Celery Worker
  worker:
    build: 
      context: .
      target: base
    container_name: video-api-worker-prod
    restart: always
    depends_on:
      - redis
      - mongodb
    environment:
      - MONGODB_URL=mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD}@mongodb:27017/video_variants?authSource=admin
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
      - CELERY_RESULT_BACKEND=redis://:${REDIS_PASSWORD}@redis:6379/0
      - TEMP_DIR=/tmp/video-variants
      - RESULTS_DIR=/app/results
      - ENVIRONMENT=production
    env_file:
      - .env.prod
    volumes:
      - ./temp:/tmp/video-variants
      - ./results:/app/results
      - ./logs:/app/logs
    networks:
      - video-api-network
    command: celery -A app.services.video_service.celery_app worker --loglevel=info --concurrency=4 -E --max-tasks-per-child=1000
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '2.0'
        reservations:
          memory: 1G
          cpus: '1.0'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  # Celery Beat Scheduler
  beat:
    build: 
      context: .
      target: base
    container_name: video-api-beat-prod
    restart: always
    depends_on:
      - redis
      - mongodb
    environment:
      - MONGODB_URL=mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD}@mongodb:27017/video_variants?authSource=admin
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
      - CELERY_RESULT_BACKEND=redis://:${REDIS_PASSWORD}@redis:6379/0
      - ENVIRONMENT=production
    env_file:
      - .env.prod
    volumes:
      - ./logs:/app/logs
    networks:
      - video-api-network
    command: celery -A app.services.video_service.celery_app beat --loglevel=info
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: video-api-nginx-prod
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/ssl/certs:ro
    depends_on:
      - api
    networks:
      - video-api-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

# Networks
networks:
  video-api-network:
    driver: bridge

# Volumes
volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
